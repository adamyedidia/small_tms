input graph edges numVertices a b c d aIndex bIndex cIndex dIndex h1 h2 h3 h4 h5 h6 h7 h8 h9 output !0 !1 !2 !3 

// Auto-generated code for function checkGraphForOrderInvariance

function doubleZero aIndex output !0 
WHILE_TEST_0: function BUILTIN_assign !0 aIndex
function BUILTIN_assign !1 numVertices
function BUILTIN_greaterThan !2 !1 !0
[!2] E (WHILE_STATE_0_FALSE); 1 ()
function zero bIndex !0 
WHILE_TEST_1: function BUILTIN_assign !0 bIndex
function BUILTIN_assign !1 numVertices
function BUILTIN_greaterThan !2 !1 !0
[!2] E (WHILE_STATE_1_FALSE); 1 ()
function zero cIndex !0 
WHILE_TEST_2: function BUILTIN_assign !0 cIndex
function BUILTIN_assign !1 numVertices
function BUILTIN_greaterThan !2 !1 !0
[!2] E (WHILE_STATE_2_FALSE); 1 ()
function zero dIndex !0 
WHILE_TEST_3: function BUILTIN_assign !0 dIndex
function BUILTIN_assign !1 numVertices
function BUILTIN_greaterThan !2 !1 !0
[!2] E (WHILE_STATE_3_FALSE); 1 ()
function BUILTIN_assign !0 aIndex
function BUILTIN_assign !1 bIndex
function BUILTIN_notEqual !2 !0 !1
function BUILTIN_assign !0 cIndex
function BUILTIN_assign !1 dIndex
function BUILTIN_notEqual !3 !0 !1
function BUILTIN_and !0 !2 !3
[!0] E (IF_STATE_0_FALSE); 1 ()
function doubleIndex2OneList graph aIndex bIndex a b !0 !1 !2 
function doubleIndex2OneList graph cIndex dIndex c d !0 !1 !2 
function isOrderEquivalent a b c d h1 h2 h3 h4 h5 h6 h7 h8 h9 !0 !1 !2 !3 
function edgeIndex edges numVertices aIndex bIndex h1 !0 !1 !2 !3 
function edgeIndex edges numVertices cIndex dIndex h2 !0 !1 !2 !3 
function BUILTIN_assign !0 h1
function BUILTIN_assign !1 h2
function BUILTIN_add !2 !0 !1
function BUILTIN_assign !0 h9
function BUILTIN_add !1 !2 !0
function BUILTIN_assign2 !0
function BUILTIN_equal !2 !1 !0
[!2] E (IF_STATE_1_FALSE); 1 ()
return
IF_STATE_1_FALSE: IF_STATE_0_FALSE: function incr dIndex !0 !1 !2 
[!0] E (WHILE_TEST_3); 1 (WHILE_TEST_3)
WHILE_STATE_3_FALSE: function incr cIndex !0 !1 !2 
[!0] E (WHILE_TEST_2); 1 (WHILE_TEST_2)
WHILE_STATE_2_FALSE: function edgeIndex edges numVertices aIndex bIndex h1 !0 !1 !2 !3 
function edgeIndex edges numVertices bIndex aIndex h2 !0 !1 !2 !3 
function xor h1 h2 h3 !0 
function BUILTIN_assign !0 h3
[!0] E (IF_STATE_2_FALSE); 1 ()
return
IF_STATE_2_FALSE: function incr bIndex !0 !1 !2 
[!0] E (WHILE_TEST_1); 1 (WHILE_TEST_1)
WHILE_STATE_1_FALSE: function incr aIndex !0 !1 !2 
[!0] E (WHILE_TEST_0); 1 (WHILE_TEST_0)
WHILE_STATE_0_FALSE: function one output !0 
return
